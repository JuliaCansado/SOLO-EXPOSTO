var RMSP_box = ee.FeatureCollection('users/juliacansado/TFG/BASES/MUN_RMSP').geometry().bounds().buffer(15000);
var RMSP = ee.FeatureCollection('users/juliacansado/TFG/BASES/MUN_RMSP');
var imageVisParamPlanet = {"opacity":1,"bands":["R","G","B"],"min":-124.90109682345337,"max":1492.1354718234534,"gamma":1};
var imageVisParamSentinel = {"opacity":1,"bands":["B4","B3","B2"],"min":355.5,"max":1823,"gamma":1};
var imageVisParamLandsat = {"opacity":1,"bands":["SR_B4","SR_B3","SR_B2"],"min":7485,"max":24836,"gamma":1};

Map.setCenter(-46.683606, -23.459268,16); 

    
var prob_intervals =
  '<RasterSymbolizer>' +
    '<ColorMap type="intervals" extended="false" >' +
      '<ColorMapEntry color="#264653" quantity="0.65" label="0-50"/>' + // azul
      '<ColorMapEntry color="#2a9d8f" quantity="0.75" label="50-75" />' + // verde
      '<ColorMapEntry color="#e9c46a" quantity="0.85" label="75-85" />' + // amarelo
      '<ColorMapEntry color="#f4a261" quantity="0.90" label="85-90" />' + // laranja
      '<ColorMapEntry color="#e76f51" quantity="1" label="97-100" />' + //vermelho
    '</ColorMap>' +
  '</RasterSymbolizer>';



// SET PLANET IMAGE 2017
var planet = ee.ImageCollection("projects/planet-nicfi/assets/basemaps/americas");
//var BHM = ee.Image("users/formigas/MSP/INPUT/HeightModel/BHM");
//var VHM = ee.Image("users/formigas/MSP/INPUT/HeightModel/VHM");

var planetImageWet_2017 = planet.filter(ee.Filter.date('2017-06-01','2017-11-30')).median();
var planetImageDry_2017 = planet.filter(ee.Filter.date('2016-12-01','2017-05-31')).median();
var planetImage_2017 = planet.filter(ee.Filter.date('2017-06-01','2017-11-30')).median();


var planetFiltWet_2017 = planetImageWet_2017.clip(RMSP_box);
Map.addLayer(planetFiltWet_2017,imageVisParamPlanet,'Planet - 2017');
var planetFiltDry_2017 = planetImageDry_2017.clip(RMSP_box);
var planetFilt_2017 = planetImage_2017.clip(RMSP_box);
//Map.addLayer(RMSP);
planetFiltWet_2017 = planetFiltWet_2017.select(["B","G","R","N"],["blue","green","red","nir"]);
planetFiltDry_2017 = planetFiltDry_2017.select(["B","G","R","N"],["blue","green","red","nir"]);
planetFilt_2017 = planetFilt_2017.select(["B","G","R","N"],["blue","green","red","nir"]);

var compute_indices_planet = function(image) {
  var ndvi = image.expression(
  '(nir-red)/(nir+red)', {
    'nir': image.select('nir'),
    'red': image.select('red')
  }).rename('ndvi');

  return image.addBands(ndvi);
};

var planetMosaicWet_2017 = compute_indices_planet(planetFiltWet_2017);
planetMosaicWet_2017 = planetMosaicWet_2017.select(['ndvi'],['ndvi_wet']);
var planetMosaicDry_2017 = compute_indices_planet(planetFiltDry_2017);
planetMosaicDry_2017 = planetMosaicDry_2017.select(['ndvi'],['ndvi_dry']);
var planetMosaic_2017 = compute_indices_planet(planetFilt_2017);

planetMosaic_2017 = planetMosaic_2017.addBands(planetMosaicWet_2017,['ndvi_wet']).addBands(planetMosaicDry_2017,['ndvi_dry']);
print(planetMosaic_2017);
//Map.addLayer(planetMosaic);


// SET SENTINEL IMAGE
var sentinelImage = ee.ImageCollection("COPERNICUS/S2_HARMONIZED");
var sentinelFilt_Wet = sentinelImage.filter(ee.Filter.lt('CLOUDY_PIXEL_PERCENTAGE', 30))
                            .filter(ee.Filter.date('2017-06-01', '2017-11-30'))
                            .median().clip(RMSP_box);
var sentinelFilt_Dry = sentinelImage.filter(ee.Filter.lt('CLOUDY_PIXEL_PERCENTAGE', 30))
                            .filter(ee.Filter.date('2016-12-01', '2017-05-31'))
                            .median().clip(RMSP_box);
var sentinelFilt = sentinelImage.filter(ee.Filter.lt('CLOUDY_PIXEL_PERCENTAGE', 30))
                            .filter(ee.Filter.date('2017-06-01','2017-11-30'))
                            .median().clip(RMSP_box);
Map.addLayer(sentinelFilt,imageVisParamSentinel,'Sentinel - 2017');
//print(sentinelFilt);


sentinelFilt_Wet = sentinelFilt_Wet.select(["B1","B2","B3","B4","B5","B6","B7","B8","B8A","B9","B10","B11","B12","QA10","QA20","QA60"],
                                    ["aerosols","blue","green","red","red_edge1","red_edge2","red_edge3",
                                    "nir","red_edge4","water_vapor","cirrus","swir1","swir2","QA10","QA20","QA60"]);
sentinelFilt_Dry = sentinelFilt_Dry.select(["B1","B2","B3","B4","B5","B6","B7","B8","B8A","B9","B10","B11","B12","QA10","QA20","QA60"],
                                    ["aerosols","blue","green","red","red_edge1","red_edge2","red_edge3",
                                    "nir","red_edge4","water_vapor","cirrus","swir1","swir2","QA10","QA20","QA60"]);
sentinelFilt = sentinelFilt.select(["B1","B2","B3","B4","B5","B6","B7","B8","B8A","B9","B10","B11","B12","QA10","QA20","QA60"],
                                    ["aerosols","blue","green","red","red_edge1","red_edge2","red_edge3",
                                    "nir","red_edge4","water_vapor","cirrus","swir1","swir2","QA10","QA20","QA60"]);
print(sentinelFilt);

var compute_indices_sentinel = function(image) {
  var ndvi = image.expression(
  '(nir-red)/(nir+red)', {
    'nir': image.select('nir'),
    'red': image.select('red')
  }).rename('ndvi');
  
  var ndbi = image.expression(
  '(swir1-nir)/(swir1+nir)', {
    'swir1': image.select('swir1'),
    'nir': image.select('nir')
  }).rename('ndbi');
  
 var bare_soil = image.expression(
  '(swir2+red)-(nir+blue)/(swir2+red)+(nir+blue)', {
    'swir2': image.select('swir2'),
    'blue': image.select('blue'),
    'nir': image.select('nir'),
    'red': image.select('red')
  }).rename('bare_soil');

  return image.addBands(ndvi).addBands(ndbi).addBands(bare_soil);
};

var sentinelMosaic_2017 = compute_indices_sentinel(sentinelFilt);
var sentinelMosaicWet_2017 = compute_indices_sentinel(sentinelFilt_Wet);
sentinelMosaicWet_2017 = sentinelMosaicWet_2017.select(['ndvi','ndbi','bare_soil'],['ndvi_wet','ndbi_wet','bare_soil_wet']);
var sentinelMosaicDry_2017 = compute_indices_sentinel(sentinelFilt_Dry);
sentinelMosaicDry_2017 = sentinelMosaicDry_2017.select(['ndvi','ndbi','bare_soil'],['ndvi_dry','ndbi_dry','bare_soil_dry']);

sentinelMosaic_2017 = sentinelMosaic_2017.addBands(sentinelMosaicWet_2017).addBands(sentinelMosaicDry_2017);
//print(sentinelMosaic);
//Map.addLayer(sentinelMosaic);


// SET LANDSAT IMAGE
var landsatImage = ee.ImageCollection("LANDSAT/LC08/C02/T1_L2");
var landsatFilt_Wet = landsatImage.filter(ee.Filter.lt('CLOUD_COVER', 30))
                            .filter(ee.Filter.date('2017-06-01', '2017-11-30'))
                            .median().clip(RMSP_box);
var landsatFilt_Dry = landsatImage.filter(ee.Filter.lt('CLOUD_COVER', 30))
                            .filter(ee.Filter.date('2016-12-01', '2017-05-31'))
                            .median().clip(RMSP_box);
var landsatFilt = landsatImage.filter(ee.Filter.lt('CLOUD_COVER', 30))
                            .filter(ee.Filter.date('2017-06-01','2017-11-30'))
                            .median().clip(RMSP_box);
Map.addLayer(landsatFilt,imageVisParamLandsat,'Landsat - 2017');

landsatFilt_Wet = landsatFilt_Wet.select(["SR_B1","SR_B2","SR_B3","SR_B4","SR_B5","SR_B6","SR_B7","SR_QA_AEROSOL"],
                                ["aerosol","blue","green","red","nir","swir1","swir2","aerosol_att"]);
landsatFilt_Dry = landsatFilt_Dry.select(["SR_B1","SR_B2","SR_B3","SR_B4","SR_B5","SR_B6","SR_B7","SR_QA_AEROSOL"],
                                ["aerosol","blue","green","red","nir","swir1","swir2","aerosol_att"]);
landsatFilt = landsatFilt.select(["SR_B1","SR_B2","SR_B3","SR_B4","SR_B5","SR_B6","SR_B7","SR_QA_AEROSOL"],
                                ["aerosol","blue","green","red","nir","swir1","swir2","aerosol_att"]);
//print(landsatFilt);

var compute_indices_landsat = function(image) {
  var ndvi = image.expression(
  '(nir-red)/(nir+red)', {
    'nir': image.select('nir'),
    'red': image.select('red')
  }).rename('ndvi');
  
  var ndbi = image.expression(
  '(swir1-nir)/(swir1+nir)', {
    'swir1': image.select('swir1'),
    'nir': image.select('nir')
  }).rename('ndbi');
  
 var bare_soil = image.expression(
  '(swir2+red)-(nir+blue)/(swir2+red)+(nir+blue)', {
    'swir2': image.select('swir2'),
    'blue': image.select('blue'),
    'nir': image.select('nir'),
    'red': image.select('red')
  }).rename('bare_soil');

  return image.addBands(ndvi).addBands(ndbi).addBands(bare_soil);
};


var landsatMosaic_2017 = compute_indices_landsat(landsatFilt);
var landsatMosaicWet_2017 = compute_indices_landsat(landsatFilt_Wet);
landsatMosaicWet_2017 = landsatMosaicWet_2017.select(['ndvi','ndbi','bare_soil'],['ndvi_wet','ndbi_wet','bare_soil_wet']);
var landsatMosaicDry_2017 = compute_indices_landsat(landsatFilt_Dry);
landsatMosaicDry_2017 = landsatMosaicDry_2017.select(['ndvi','ndbi','bare_soil'],['ndvi_dry','ndbi_dry','bare_soil_dry']);

landsatMosaic_2017 = landsatMosaic_2017.addBands(landsatMosaicWet_2017).addBands(landsatMosaicDry_2017);
//print(landsatMosaic);
//Map.addLayer(landsatMosaic);

  
// GENERATE POINTS
var notbareFC_2017 = ee.FeatureCollection.randomPoints({
  region: notbare_2017,
  points: 1200,
  seed: 24
});  
var bareFC_2017 = ee.FeatureCollection.randomPoints({
  region: bare_2017,
  points: 400,
  seed: 24
});
// SET LANDCOVER/CLASS VALUE
var notbareProp_2017 = notbareFC_2017.map(function(poligono){
  return poligono.set('landcover',0);
});
var bareProp_2017 = bareFC_2017.map(function(poligono){
  return poligono.set('landcover',1);
});

// var pontosTraining_2017 = notbareProp_2017.merge(bareProp_2017);
// var pontosValidation_2017 = val_notbareProp_2017.merge(val_bareProp_2017);
// print(pontosTraining_2017);
// print(pontosValidation_2017);

var pontosTotais_2017 = notbareProp_2017.merge(bareProp_2017).randomColumn();
var pontosTraining_2017 = pontosTotais_2017.filter(ee.Filter.lt('random',0.7));
var pontosValidation_2017 = pontosTotais_2017.filter(ee.Filter.gte('random', 0.7));

// PLANET TRAIN & CLASSIFY
var trainingPlanet_2017 = planetMosaic_2017.sampleRegions({
  collection: pontosTraining_2017, 
  properties: ['landcover'], 
  scale: 5
}); 
 
//print(trainingPlanet);

var classifierPlanet_2017 = ee.Classifier.smileRandomForest({numberOfTrees: 50, seed: 24}).train({
  features: trainingPlanet_2017, 
  classProperty: 'landcover'
});
classifierPlanet_2017 = classifierPlanet_2017.setOutputMode('PROBABILITY');
// // Classify the image.
var classifiedPlanet_2017 = planetMosaic_2017.classify(classifierPlanet_2017);
//print(classifiedPlanet)
var baresoilPlanet_2017 = classifiedPlanet_2017.gt(0.75);
//print(baresoilPlanet)
//Map.addLayer(classifiedPlanet, {min: 0, max: 3, palette: ['blue', 'brown', 'gray', 'green']}, 'Planet Classify - 2017',false); 
Map.addLayer(classifiedPlanet_2017.sldStyle(prob_intervals),{},'baresoil - Planet');

Export.image.toAsset({image: classifiedPlanet_2017, 
                    description: 'classifiedPlanet_2017', 
                    assetId: 'users/juliacansado/TFG/PROMISSORES/planet_2017_class', 
                    region: RMSP_box, 
                    maxPixels:1200000000,
                    scale: 5});
 
// PLANET ACCURACY
var testPlanet_2017 = baresoilPlanet_2017.sampleRegions({
  collection: pontosValidation_2017,
  properties: ['landcover'],
  scale: 5,
  tileScale: 2
});
print(testPlanet_2017, 'sample');
var testConfusionPlanet_2017 = testPlanet_2017.errorMatrix('landcover','classification');
print('Planet Confusion Matrix', testConfusionPlanet_2017);
print('Planet Test Accuracy', testConfusionPlanet_2017.accuracy());

//MAP
print('M0-R0', testConfusionPlanet_2017.array().get([0,0]));
print('M1-R0', testConfusionPlanet_2017.array().get([0,1]));
print('M0-R1', testConfusionPlanet_2017.array().get([1,0]));
print('M1-R1', testConfusionPlanet_2017.array().get([1,1]));

// SENTINEL TRAIN & CLASSIFY
var trainingSentinel = sentinelMosaic_2017.sampleRegions({
  collection: pontosTraining_2017, 
  properties: ['landcover'], 
  scale: 10,
  tileScale: 3
});

print(trainingSentinel);

var classifierSentinel = ee.Classifier.smileRandomForest({numberOfTrees: 50, seed: 24}).train({
  features: trainingSentinel, 
  classProperty: 'landcover'
});
classifierSentinel = classifierSentinel.setOutputMode('PROBABILITY');
// // Classify the image.
var classifiedSentinel = sentinelMosaic_2017.classify(classifierSentinel);
var baresoilSentinel = classifiedSentinel.gte(0.75);
print(baresoilSentinel);
//Map.addLayer(classifiedSentinel, {min: 0, max: 3, palette: ['blue', 'brown', 'gray', 'green']}, 'Sentinel Classify - 2017',false); 
Map.addLayer(classifiedSentinel.sldStyle(prob_intervals),{},'baresoil - Sentinel');

Export.image.toAsset({image: classifiedSentinel, 
                    description: '06-2017-11-2017-index_prob_sentinel', 
                    assetId: 'users/juliacansado/TFG/test1_2017_sentinel', 
                    region: RMSP_box, 
                    maxPixels:300000000,
                    scale: 10});

// SENTINEL ACCURACY
var testSentinel = baresoilSentinel.sampleRegions({
  collection: pontosValidation_2017,
  properties: ['landcover'],
  scale: 10,
  tileScale:2
});
//print(testSentinel)

var testConfusionSentinel = testSentinel.errorMatrix('landcover','classification');
print('Sentinel Confusion Matrix', testConfusionSentinel);
print('Sentinel Test Accuracy', testConfusionSentinel.accuracy());



//  LANDSAT TRAIN & CLASSIFY
var trainingLandsat_2017 = landsatMosaic_2017.sampleRegions({
  collection: pontosTraining_2017, 
  properties: ['landcover'], 
  scale: 30,
  tileScale: 2
}); 
 
//print(trainingLandsat);

var classifierLandsat_2017 = ee.Classifier.smileRandomForest({numberOfTrees: 50, seed: 24}).train({
  features: trainingLandsat_2017, 
  classProperty: 'landcover'
});
classifierLandsat_2017 = classifierLandsat_2017.setOutputMode('PROBABILITY');
// // Classify the image.
var classifiedLandsat_2017 = landsatMosaic_2017.classify(classifierLandsat_2017);
var baresoilLandsat_2017 = classifiedLandsat_2017.gte(0.75);
//Map.addLayer(classifiedLandsat, {min: 0, max: 3, palette: ['blue', 'brown', 'gray', 'green']}, 'Landsat Classify - 2017'); 
Map.addLayer(classifiedLandsat_2017.sldStyle(prob_intervals),{},'baresoil - Landsat');

Export.image.toAsset({image: classifiedLandsat_2017, 
                    description: '06-2017-11-2017-index_prob_landsat', 
                    assetId: 'users/juliacansado/TFG/test1_2017_landsat', 
                    region: RMSP_box, 
                    maxPixels:120000000,
                    scale: 25});
                    
// LANDSAT ACCURACY
var testLandsat_2017 = baresoilLandsat_2017.sampleRegions({
  collection: pontosValidation_2017,
  properties: ['landcover'],
  scale: 30,
  tileScale:2
});
//print(testLandsat);
var testConfusionLandsat_2017 = testLandsat_2017.errorMatrix('landcover','classification');
print('Landsat Error Matrix', testConfusionLandsat_2017);
print('Landsat Confusion Matrix', ee.ConfusionMatrix(testConfusionLandsat_2017));
print('Landsat Test Accuracy', testConfusionLandsat_2017.accuracy());



